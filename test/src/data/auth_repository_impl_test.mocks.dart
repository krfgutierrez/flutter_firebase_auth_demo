// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_firebase_auth_demo/test/src/data/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_firebase_auth_demo/src/domain/entities/registered_account.dart'
    as _i4;
import 'package:flutter_firebase_auth_demo/src/domain/entities/user.dart'
    as _i2;
import 'package:flutter_firebase_auth_demo/src/domain/entities/user_session.dart'
    as _i3;
import 'package:flutter_firebase_auth_demo/src/domain/get_user_service.dart'
    as _i5;
import 'package:flutter_firebase_auth_demo/src/domain/login_service.dart'
    as _i7;
import 'package:flutter_firebase_auth_demo/src/domain/models/login_service_params.dart'
    as _i8;
import 'package:flutter_firebase_auth_demo/src/domain/models/registration_service_params.dart'
    as _i10;
import 'package:flutter_firebase_auth_demo/src/domain/registration_service.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUser_0 extends _i1.SmartFake implements _i2.AppUser {
  _FakeAppUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserSession_1 extends _i1.SmartFake implements _i3.UserSession {
  _FakeUserSession_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisteredAccount_2 extends _i1.SmartFake
    implements _i4.RegisteredAccount {
  _FakeRegisteredAccount_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetUserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUserService extends _i1.Mock implements _i5.GetUserService {
  @override
  _i6.Future<_i2.AppUser> execute(dynamic params) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i6.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i6.Future<_i2.AppUser>);
}

/// A class which mocks [LoginService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginService extends _i1.Mock implements _i7.LoginService {
  @override
  _i6.Future<_i3.UserSession> execute(_i8.LoginServiceParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i6.Future<_i3.UserSession>.value(_FakeUserSession_1(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.UserSession>.value(_FakeUserSession_1(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i6.Future<_i3.UserSession>);
}

/// A class which mocks [RegistrationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegistrationService extends _i1.Mock
    implements _i9.RegistrationService {
  @override
  _i6.Future<_i4.RegisteredAccount> execute(
          _i10.RegistrationServiceParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i6.Future<_i4.RegisteredAccount>.value(_FakeRegisteredAccount_2(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.RegisteredAccount>.value(_FakeRegisteredAccount_2(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i6.Future<_i4.RegisteredAccount>);
}
